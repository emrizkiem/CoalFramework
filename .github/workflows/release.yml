name: Auto Publish CoalFramework to CocoaPods

on:
  push:
    branches:
      - master

jobs:
  replace_tag_and_publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Install CocoaPods
        run: gem install cocoapods

      - name: Get Latest Commit Message
        id: get_commit_message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=format:%s)
          echo "Latest commit message: $COMMIT_MESSAGE"
          echo "::set-output name=commit_message::$COMMIT_MESSAGE"

      - name: Fetch Tags
        run: git fetch --tags

      - name: Get Latest Tag
        id: get_tag
        run: |
          TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "Current tag: $TAG"
          echo "::set-output name=latest_tag::$TAG"

      - name: Read version from Podspec
        id: read_podspec_version
        run: |
          PODSPEC_VERSION=$(grep -E 's.version[[:space:]]*=' CoalFramework.podspec | sed -E "s/.*= '(.*)'/\1/")
          echo "Podspec version: $PODSPEC_VERSION"
          echo "::set-output name=podspec_version::$PODSPEC_VERSION"

      - name: Compare versions and update tag if needed
        id: update_tag_commit
        run: |
          OLD_TAG=${{ steps.get_tag.outputs.latest_tag }}
          PODSPEC_VERSION=${{ steps.read_podspec_version.outputs.podspec_version }}

          if [ "$OLD_TAG" == "$PODSPEC_VERSION" ]; then
            echo "Versions match, no new tag needed."
            echo "::set-output name=new_tag::$OLD_TAG"
          else
            echo "Versions differ, creating a new tag."
            git config --global user.name "ArifRach"
            git config --global user.email "Arifrach31@gmail.com"
            git tag -d $OLD_TAG || true
            git tag -a $PODSPEC_VERSION -m "${{ steps.get_commit_message.outputs.commit_message }}"
            git push origin $PODSPEC_VERSION --force
            echo "::set-output name=new_tag::$PODSPEC_VERSION"
          fi

      - name: Push Podspec to CocoaPods Trunk
        run: |
          NEW_TAG=${{ steps.update_tag_commit.outputs.new_tag }}
          pod trunk push CoalFramework.podspec --allow-warnings
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
