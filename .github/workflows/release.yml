name: Auto Publish CoalFramework to CocoaPods

on:
  push:
    branches:
      - master

jobs:
  replace_tag_and_publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0' 
          bundler-cache: true

      - name: Install CocoaPods
        run: gem install cocoapods

      - name: Set Git Config
        run: |
          git config --global user.name "ArifRach"
          git config --global user.email "Arifrach31@gmail.com"

      - name: Get Latest Commit Message
        id: get_commit_message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=format:%s)
          echo "Latest commit message: $COMMIT_MESSAGE"
          echo "::set-output name=commit_message::$COMMIT_MESSAGE"

      - name: Fetch Tags
        run: git fetch --tags

      - name: Get Latest Tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "Current tag: $TAG"
          echo "::set-output name=latest_tag::$TAG"

      - name: Get major version num and update tag
        id: update_tag_commit
        run: |
          OLD_TAG=${{ steps.get_tag.outputs.latest_tag }}
          VERSION_PARTS=(${OLD_TAG//./ })
          PATCH_VERSION=$((VERSION_PARTS[2] + 1))
          NEW_TAG="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${PATCH_VERSION}"
          echo "Old tag: $OLD_TAG"
          echo "New tag: $NEW_TAG"
          git config --global user.name "ArifRach"
          git config --global user.email "Arifrach31@gmail.com"
          git tag -d $OLD_TAG || true
          git tag -a $NEW_TAG -m "${{ steps.get_commit_message.outputs.commit_message }}"
          git push origin $NEW_TAG --force
          echo "::set-output name=new_tag::$NEW_TAG"

      - name: Delete Old Pod Version from Trunk
        run: |
          OLD_TAG=${{ steps.get_tag.outputs.latest_tag }}
          pod trunk delete CoalFramework $OLD_TAG
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}

      - name: Push Podspec to CocoaPods Trunk
        run: |
          NEW_TAG=${{ steps.increment_tag.outputs.new_tag }}
          sed -i '' "s/s.version          = '$OLD_TAG'/s.version          = '$NEW_TAG'/g" CoalFramework.podspec
          pod trunk push CoalFramework.podspec --allow-warnings
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
